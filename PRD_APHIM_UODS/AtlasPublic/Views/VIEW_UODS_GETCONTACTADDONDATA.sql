
CREATE VIEW [AtlasPublic].[VIEW_UODS_GETCONTACTADDONDATA]  
AS
--BLK_DIContactAddon GET THE CONTACT ADD ON SECTION DATA WHICH ARE LINKED TO PARTICULAR DI
WITH CTE_PHDATEFIELDFORMAT(DATEFIELDFORMAT)
AS
(
    SELECT 
    CASE 
        WHEN ISNULL(VAL.Value,'')='' THEN CAST(CONFIG.defaultValue AS VARCHAR)
        ELSE CAST(VAL.Value AS VARCHAR)
    END AS DATEFIELDFORMAT
    FROM S_CONFIGDEFINITION (nolock)CONFIG
    INNER JOIN S_CONFIGVALUE(nolock) VAL ON VAL.configdefinition_id = CONFIG.id
    WHERE CONFIG.[KEY]='PHDateFieldFormat'
)
(   
    SELECT 
    PHCASE.DVPR_ROWID AS [RECORD_ID],    
    MBRROLE.player_ID AS [CONTACT_ID],
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] ,   
    UDSECTIONACTID AS [SECTION_INSTANCE_ID],  
    SEC_ID AS [SECTION_DEF_DR],  
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],    
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    (SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (FOLDERACT.ID, 1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER],   
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE], 
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT,
    DV_PHPERSONALRECORD PHCASE (NOLOCK) 
    INNER JOIN P_PARTICIPATION INDPART (NOLOCK) ON INDPART.ACT_ID = PHCASE.DVPR_ROWID AND INDPART.TYPECODE = 'IND'
    INNER JOIN R_ROLE EXPROLE (NOLOCK) ON EXPROLE.ID = INDPART.ROLE_ID AND EXPROLE.CLASSCODE = 'EXPR' AND EXPROLE.STATUSCODE <> 'NULLIFIED'
    INNER JOIN R_ROLE MBRROLE (NOLOCK) ON MBRROLE.SCOPER_ID = EXPROLE.PLAYER_ID AND MBRROLE.CLASSCODE = 'MBR' AND MBRROLE.STATUSCODE <> 'NULLIFIED'
    INNER JOIN P_PARTICIPATION SBJPART(NOLOCK) ON SBJPART.ROLE_ID = MBRROLE.ID AND SBJPART.TYPECODE = 'SBJ'
    INNER JOIN A_ACT AS FOLDERACT (NOLOCK) ON FOLDERACT.ID =SBJPART.ACT_ID AND FOLDERACT.CLASSCODE='FOLDER'
    INNER JOIN [ATLASINTERNAL].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FOLDERACT.ID
    INNER JOIN VCP_DISEASE VCPDIS (NOLOCK) ON VCPDIS.SUBJCODE_ID = PHCASE.DVPR_DISEASECODE_ID AND VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID  
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID 
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID
)       
--BLK_DIContactAddon

--BLK_CIInvConatctAddon  GET THE ADDON SECTIONS DISPLAYED IN THE CI INVESTIGATION TAB
UNION ALL   
(
    SELECT 
    PHCASE.DVPR_ROWID AS [RECORD_ID],  
    PHCASE.DVPR_PersonDR AS [CONTACT_ID],    
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] , 
    UDSECTIONACTID AS [SECTION_INSTANCE_ID], 
    SEC_ID AS [SECTION_DEF_DR],     
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],   
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    ( SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (VSEC.ACT_ID,1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER] ,    
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE], 
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN ( IsNull(VD.ContactsUDSectionCode_ID, VSEC.SectionID) = VSEC.SectionID Or ActUDSection.ValueCode_ID Is not Null) THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT, [DV_PHPERSONALRECORD] PHCASE (NOLOCK) 
    INNER JOIN V_UNIFIEDCODESET UCS (NOLOCK) ON UCS.ID = PHCASE.DVPR_TYPEDR  AND UCS.CONCEPTCODE = 'CI'
    INNER JOIN [DBO].[GetLinkedCIFolderAndSectionID]() FUNCGETCIADDONDATA ON FUNCGETCIADDONDATA.PHCASEID=PHCASE.DVPR_RowID AND FUNCGETCIADDONDATA.ContactSecDefID >0
    INNER JOIN [AtlasInternal].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FUNCGETCIADDONDATA.LINKEDACTID
    INNER JOIN A_Act ActUDSection (NOLOCK)ON ActUDSection.ID = VSEC.UDSectionActID And ActUDSection.ClassCode = 'DOCSECT'
    INNER JOIN VCP_Disease VD (NOLOCK)ON VD.SubjCode_ID = PHCASE.DVPR_DiseaseCode_ID
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID    
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID    
    Where ( FUNCGETCIADDONDATA.ContactSecDefID = VSEC.SectionID)
)

UNION ALL   
(
    SELECT 
    PHCASE.DVPR_ROWID AS [RECORD_ID],  
    PHCASE.DVPR_PersonDR AS [CONTACT_ID],    
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] , 
    UDSECTIONACTID AS [SECTION_INSTANCE_ID], 
    SEC_ID AS [SECTION_DEF_DR],     
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],   
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    ( SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (VSEC.ACT_ID,1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER] ,    
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE], 
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN (IsNull(VD.ContactsUDSectionCode_ID, VSEC.SectionID) = VSEC.SectionID Or ActUDSection.ValueCode_ID Is not Null) THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT, [DV_PHPERSONALRECORD] PHCASE (NOLOCK) 
    INNER JOIN V_UNIFIEDCODESET UCS (NOLOCK) ON UCS.ID = PHCASE.DVPR_TYPEDR  AND UCS.CONCEPTCODE = 'CI'
    INNER JOIN [DBO].[GetLinkedCIFolderAndSectionID]() FUNCGETCIADDONDATA ON FUNCGETCIADDONDATA.PHCASEID=PHCASE.DVPR_RowID AND FUNCGETCIADDONDATA.[CIADDONSECTIONID] >0 AND FUNCGETCIADDONDATA.ContactSecDefID =0
    INNER JOIN [AtlasInternal].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FUNCGETCIADDONDATA.LINKEDACTID
    INNER JOIN A_Act ActUDSection (NOLOCK)ON ActUDSection.ID = VSEC.UDSectionActID And ActUDSection.ClassCode = 'DOCSECT'
    INNER JOIN VCP_Disease VD (NOLOCK)ON VD.SubjCode_ID = PHCASE.DVPR_DiseaseCode_ID
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID    
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID    
    Where ( FUNCGETCIADDONDATA.[CIADDONSECTIONID] = VSEC.SectionID)
)

--BLK_CIInvConatctAddon

--BLK_DIInvContactAddon GET THE ADDON SECTIONS DISPLAYED IN THE DI INVESTIGATION TAB    
UNION ALL
(
    SELECT 
    PHCASE.DVPR_ROWID AS [RECORD_ID],  
    PHCASE.DVPR_PersonDR AS [CONTACT_ID],    
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] , 
    UDSECTIONACTID AS [SECTION_INSTANCE_ID], 
    SEC_ID AS [SECTION_DEF_DR],     
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],   
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    ( SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (VSEC.ACT_ID,1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER] ,    
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE],   
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN FUNCGETDIADDONDATA.ContactSecDefID = VSEC.SectionID THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT,
    [DV_PHPERSONALRECORD] PHCASE (NOLOCK) 
    INNER JOIN V_UNIFIEDCODESET UCS (NOLOCK) ON UCS.ID = PHCASE.DVPR_TYPEDR AND UCS.CONCEPTCODE = 'DI'
    INNER JOIN [DBO].[GetLinkedDIFolderAndSectionID]() FUNCGETDIADDONDATA ON FUNCGETDIADDONDATA.PHCASEID=PHCASE.DVPR_RowID AND FUNCGETDIADDONDATA.ContactSecDefID > 0
    INNER JOIN [AtlasInternal].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FUNCGETDIADDONDATA.LINKEDACTID
    INNER JOIN A_Act ActUDSection (NOLOCK) ON ActUDSection.ID = VSEC.UDSectionActID And ActUDSection.ClassCode = 'DOCSECT' AND FUNCGETDIADDONDATA.ContactSecDefID = VSEC.SectionID
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID    
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID    
)
--BLK_DIInvContactAddon

--BLK_ARContactAddon    GET THE CONTACT ADDON SECTIONS DISPLAYED IN THE AR
UNION ALL
(
    SELECT 
    AR.DVAI_RowID AS [RECORD_ID],  
    MBRROLE.player_ID AS [CONTACT_ID],    
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] ,   
    UDSECTIONACTID AS [SECTION_INSTANCE_ID],  
    SEC_ID AS [SECTION_DEF_DR],  
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],    
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    (SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (FOLDERACT.ID, 1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER],   
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE],   
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT,
    DV_AnimalReport AR (NOLOCK) 
    INNER JOIN P_PARTICIPATION INDPART (NOLOCK) ON INDPART.ACT_ID = AR.DVAI_ROWID AND INDPART.TYPECODE = 'IND'
    INNER JOIN R_ROLE EXPROLE (NOLOCK) ON EXPROLE.ID = INDPART.ROLE_ID AND EXPROLE.CLASSCODE = 'EXPR' AND EXPROLE.STATUSCODE <> 'NULLIFIED'
    INNER JOIN R_ROLE MBRROLE (NOLOCK) ON MBRROLE.SCOPER_ID = EXPROLE.PLAYER_ID AND MBRROLE.CLASSCODE = 'MBR'
    INNER JOIN P_PARTICIPATION SBJPART(NOLOCK) ON SBJPART.ROLE_ID = MBRROLE.ID AND SBJPART.TYPECODE = 'SBJ'
    INNER JOIN A_ACT AS FOLDERACT (NOLOCK) ON FOLDERACT.ID =SBJPART.ACT_ID AND FOLDERACT.CLASSCODE='FOLDER'
    INNER JOIN [ATLASINTERNAL].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FOLDERACT.ID
    INNER JOIN VCP_DISEASE VCPDIS (NOLOCK) ON VCPDIS.SUBJCODE_ID = AR.DVAI_DiseaseCode_ID AND VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID  
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID 
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID
)
--BLK_ARContactAddon

--BLK_OBContactAddon    GET THE CONTACT ADDON SECTIONS DISPLAYED IN THE OB
UNION ALL
(
    SELECT 
    OB.DVOB_RowID AS [RECORD_ID],  
    MBRROLE.player_ID AS [CONTACT_ID],    
    NULL AS [FORM_INSTANCE_ID], 
    NULL [FORM_DEF_DR],    
    NULL AS [FORM_NAME],  
    NULL [FORM_SHOW_IN_CMR],    
    NULL [FORM_SHOW_IN_NCM] ,
    NULL AS [FORM_DESCRIPTION],  
    NULL AS [FORM_CREATEDATE] ,   
    UDSECTIONACTID AS [SECTION_INSTANCE_ID],  
    SEC_ID AS [SECTION_DEF_DR],  
    UDSECNAME AS [SECTION_NAME],    
    (CASE WHEN (SELECT VTD.ACTIVE FROM V_TERMDICTIONARY VTD (NOLOCK) WHERE SECTIONID=VTD.TERMCODE_ID) > 0 THEN 'ACTIVE' ELSE 'INACTIVE' END) AS [SECTION_STATUS],    
    (CASE WHEN (SELECT VCP.SEC_ISLISTSECTION FROM VCP_UDSECTION VCP (NOLOCK) WHERE SECTIONID=VCP.SUBJCODE_ID) > 0 THEN 'LIST' ELSE 'NON-LIST' END) AS [SECTION_TYPE],
    (SELECT LISTSECTIONNUMBER FROM [GETLISTSECTIONNUMBER] (FOLDERACT.ID, 1)  WHERE SECACTID = UDSECTIONACTID) AS [SECTION_NUMBER],   
    UDFIELDACTID AS [FIELD_INSTANCE_ID],
    FIELD_ID AS [FIELD_DEF_DR],      
    UDFIELDNAME AS [FIELD_NAME],    
    (CASE WHEN UDFIELDISREQUIRED=1 THEN 'TRUE' ELSE 'FALSE' END) AS [FIELD_IS_REQUIRED],    
    (CASE WHEN VSEC.UDField_valueENTITYID > 1 
     THEN 
        (SELECT [dbo].[UDF_GetEntityNameAsText](VSEC.UDField_metaCodeUCSID,VSEC.UDField_valueENTITYID) AS Expr1)
     ELSE 
        (SELECT dbo.UDF_GetFieldValueAsText(NULL, NULL, NULL, VSEC.UDField_valueDateTime, VSEC.UDField_valueString, VSEC.UDField_valueENTITYID, - 1, VSEC.UDField_valueUCSID, VSEC.UDField_metaCodeUCSID, NULL, CTE_PHDATEFIELDFORMAT.DATEFIELDFORMAT) AS Expr1)
     END) AS [FIELD_VALUE], 
    (CASE WHEN VSEC.UDField_valueENTITYID > 1
     THEN 
        CAST(VSEC.UDField_valueENTITYID AS varchar(100))
     ELSE 
        (SELECT dbo.UDF_GetFieldUCSValueAsConceptCode( VSEC.UDField_valueUCSID) AS Expr1)
     END) AS [FIELD_CONCEPT_CODE_VALUE],   
    (CASE WHEN VTDFIELD.ACTIVE=1 THEN 'ACTIVE' ELSE 'INACTIVE' END)  AS [FIELD_STATUS],  
    UCSFIELDTYPE.FULLNAME AS [FIELD_TYPE],
    CASE WHEN  VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID THEN 0 ELSE 1 END AS SECTION_IS_HISTORICAL
    FROM CTE_PHDATEFIELDFORMAT,
    DV_Outbreak OB (NOLOCK) 
    INNER JOIN P_PARTICIPATION INDPART (NOLOCK) ON INDPART.ACT_ID = OB.DVOB_ROWID AND INDPART.TYPECODE = 'IND'
    INNER JOIN R_ROLE EXPROLE (NOLOCK) ON EXPROLE.ID = INDPART.ROLE_ID AND EXPROLE.CLASSCODE = 'EXPR' AND EXPROLE.STATUSCODE <> 'NULLIFIED'
    INNER JOIN R_ROLE MBRROLE (NOLOCK) ON MBRROLE.SCOPER_ID = EXPROLE.PLAYER_ID AND MBRROLE.CLASSCODE = 'MBR' 
    INNER JOIN P_PARTICIPATION SBJPART(NOLOCK) ON SBJPART.ROLE_ID = MBRROLE.ID AND SBJPART.TYPECODE = 'SBJ'
    INNER JOIN A_ACT AS FOLDERACT (NOLOCK) ON FOLDERACT.ID =SBJPART.ACT_ID AND FOLDERACT.CLASSCODE='FOLDER'
    INNER JOIN [ATLASINTERNAL].[VIEW_UODS_UDSECTION] VSEC (NOLOCK) ON VSEC.ACT_ID=FOLDERACT.ID
    INNER JOIN VCP_DISEASE VCPDIS (NOLOCK) ON VCPDIS.SUBJCODE_ID = OB.DVOB_DiseaseCode_ID AND VCPDIS.CONTACTSUDSECTIONCODE_ID=VSEC.UDSECID  
    INNER JOIN V_UNIFIEDCODESET UCSFIELDTYPE (NOLOCK) ON UCSFIELDTYPE.ID=VSEC.FIELD_TYPECODE_ID 
    INNER JOIN V_TERMDICTIONARY VTDFIELD (NOLOCK) ON VTDFIELD.TERMCODE_ID=VSEC.UDFIELDID
)
--BLK_OBContactAddon
